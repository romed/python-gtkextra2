/* -*- Mode: C; c-basic-offset: 4 -*- */
%%
headers
#define NO_IMPORT_PYGOBJECT
#include <pygobject.h>
#include <pygtk/pygtk.h>
#include <gtkextra/gtkextra.h>

/* Fixup boo-boo's or ommissions.  Probably should be fixed in gtkextra.*/
#define GTK_ICON_FILE_SEL GTK_ICON_FILESEL
#define GTK_TYPE_ICON_FILE_SEL (gtk_icon_file_selection_get_type())
#define GTK_TYPE_COMBO_BOX (gtk_combobox_get_type())
#define GTK_TYPE_COLOR_COMBO (gtk_color_combo_get_type())
#define GTK_TYPE_BORDER_COMBO (gtk_border_combo_get_type())
#define GTK_TYPE_FONT_COMBO (gtk_font_combo_get_type())
#define GTK_TYPE_PLOT3_D (gtk_plot3d_get_type())
#define GTK_TYPE_TOGGLE_COMBO (gtk_toggle_combo_get_type())

/* Hack boxed types. Just enought to let code generator compile. Not perfectly correct! */
//GType   gtk_psfont_get_type (void) G_GNUC_CONST;
#define GTK_TYPE_PSFONT (gtk_psfont_get_type ())
static GType
gtk_psfont_get_type (void)
{
  static GType our_type = 0;
  
  if (our_type == 0)
    our_type = g_pointer_type_register_static ("GtkPSFont");

  return our_type;
}

#if 0
//GType   gtk_plot_canvas_child_get_type (void) G_GNUC_CONST;
#define GTK_TYPE_PLOT_CANVAS_CHILD (gtk_plot_canvas_child_get_type ())
static GType
gtk_plot_canvas_child_get_type (void)
{
  static GType our_type = 0;
  
  if (our_type == 0)
    our_type = g_pointer_type_register_static ("GtkPlotCanvasChild");

  return our_type;
}
#endif

/* This one is probably an "error" in h2def.py */
#define GTK_PLOT3_D GTK_PLOT3D

guint16 gtk_plot_canvas_set_flags(GtkPlotCanvas *canvas, guint16 flags) { return GTK_PLOT_CANVAS_SET_FLAGS(canvas, flags); }
guint16 gtk_plot_canvas_unset_flags(GtkPlotCanvas *canvas, guint16 flags) { return GTK_PLOT_CANVAS_UNSET_FLAGS(canvas, flags); }

%%
modulename gtkextra
%%
import gobject.GObject as PyGObject_Type
import gtk.gdk.Pixmap as PyGdkPixmap_Type
import gtk.gdk.Drawable as PyGdkDrawable_Type
import gtk._gtk.Widget as PyGtkWidget_Type
import gtk._gtk.Object as PyGtkObject_Type
import gtk._gtk.Container as PyGtkContainer_Type
import gtk._gtk.Fixed as PyGtkFixed_Type
import gtk._gtk.Toolbar as PyGtkToolbar_Type
import gtk._gtk.Entry as PyGtkEntry_Type
import gtk._gtk.Window as PyGtkWindow_Type
import gtk._gtk.CTree as PyGtkCTree_Type
import gtk._gtk.ToggleButton as PyGtkToggleButton_Type
import gtk._gtk.Adjustment as PyGtkAdjustment_Type
import gtk._gtk.HBox as PyGtkHBox_Type

%%
override gtk_psfont_get_char_size
static PyObject *
_wrap_gtk_psfont_get_char_size(PyObject *self)
{
    PyErr_SetString(PyExc_NotImplementedError, __FUNCTION__ );
    return NULL;
}

%%
override-attr GtkPlotCanvasChild.data
static PyObject *
_wrap_gtk_plot_canvas_child__get_data(PyObject *self, void *closure)
{
    // FIXME
    switch (pyg_pointer_get(self, GtkPlotCanvasChild)->type) {
    case GTK_PLOT_CANVAS_NONE:
	Py_INCREF(Py_None);
	return Py_None;
#if 0
    case GTK_PLOT_CANVAS_PLOT:
    case GTK_PLOT_CANVAS_DATA:
    case GTK_PLOT_CANVAS_LEGENDS:
    case GTK_PLOT_CANVAS_TEXT:
	return pygobject_new((GObject *)(pyg_pointer_get(self, GtkPlotCanvasChild)->data));
#endif
    default:
	return PyCObject_FromVoidPtr(pyg_pointer_get(self, GtkPlotCanvasChild)->data, NULL);
    }
}

%%
ignore-glob *_get_type
%%
ignore
  triangulate
  gtk_sheet_row_resizable
  gtkextra_check_version
  gtk_plot_dt_set_quadtrilateral
